CXX = clang++
CXXFLAGS  = -Wall -fPIC
CXXFLAGS += -g -fno-inline -O0
# CXXFLAGS += -O3

ROOT_MAJOR   = $(shell root-config --version | cut -d. -f1 )

ifeq ($(ROOT_MAJOR),5)
CXXFLAGS += -DROOT5
ROOTFLAGS = `$(ROOTSYS)/bin/root-config --cflags --glibs` -lCintex
else
ROOTFLAGS = `$(ROOTSYS)/bin/root-config --cflags --glibs`
endif
ROOTINC = `$(ROOTSYS)/bin/root-config --cflags`

OBJS = MULatErrorBand.o MULatErrorBand2D.o MULatErrorBand3D.o \
			 MUVertErrorBand.o MUVertErrorBand2D.o MUVertErrorBand3D.o \
			 MUH1D.o MUH2D.o MUH3D.o \
			 MUPlotter.o MUHDict.o HistogramUtils.o MUApplication.o

SRC = MULatErrorBand.cxx MULatErrorBand2D.cxx MULatErrorBand3D.cxx \
			MUVertErrorBand.cxx MUVertErrorBand2D.cxx MUVertErrorBand3D.cxx \
			MUH1D.cxx MUH2D.cxx MUH3D.cxx \
			MUPlotter.cxx MUHDict.cxx HistogramUtils.cxx MUApplication.cxx

INCLUDE += -I$(ROOMU_SYS)/
LDFLAGS += -shared
# LDFLAGS += -stdlib=libstdc++

TARGET = libplotutils.so

ROOTDICTCXX = MUHDict.cxx
ROOTDICTH = MUHDict.h
ROOTDICTHEADERS = MULatErrorBand.h MULatErrorBand2D.h MULatErrorBand3D.h \
		MUVertErrorBand.h MUVertErrorBand2D.h MUVertErrorBand3D.h \
		MUH1D.h MUH2D.h MUH3D.h MUApplication.h
# rwh
ROOTDICTBASE = MUHDict
TARGETBASE = libplotutils


$(TARGET): $(OBJS) $(ROOTDICTCXX)
	$(info working on TARGET $(TARGET) )
	@if test -d ../lib; then echo LibOk > /dev/null 2>&1; else mkdir -p ../lib; fi
	$(CXX) $(LDFLAGS) -o $(TARGET) $(OBJS) $(ROOTFLAGS)
	mv $(TARGET) ../lib
ifeq ($(ROOT_MAJOR),5)
	@echo "nothing special for ROOT 5"
else
	@echo "mv _rdict.pcm and .rootmap for ROOT 6"
	mv $(TARGETBASE)_rdict.pcm ../lib
	mv $(TARGETBASE).rootmap    ../lib
endif


$(OBJS): %.o: %.cxx %.h
	@echo $(OBJS)
	@echo $(SRC)
	$(CXX) $(CXXFLAGS) $(INCLUDE) $(ROOTINC) -c $< -o $@

$(ROOTDICTCXX): $(ROOTDICTHEADERS) Linkdef.h
	$(info working on ROOTDICTCXX $(ROOTDICTCXX) from $(ROOTDICTHEADERS) )
	$(info dollar-carot is $^ )
	$(info dollar-at    is $@ )
ifeq ($(ROOT_MAJOR),5)
	$(ROOTSYS)/bin/rootcint -f $@ -c $(CXXFLAGS) $(INCLUDE) -p $^
else
	# to make pcm relocatable we have to set it to strip these off
	# sub-dirs Types & Interfaces don't have dictionaries, made as part of Nuclear
	# so we have to explicitly (in case of Nuclear, no harm doing for rest)
	# set include path to those
	# lots of possible include paths to try to catch all cases of in situ, installed
	# and re-packages into UPS
	ROOT_INCLUDE_PATH=$(ROOT_INCLUDE_PATH):$(ROOMU_SYS):$(ROOMU_SYS)/PlotUtils \
	rootcling -f $(ROOTDICTCXX) \
		    -I$(ROOTMU_SYS) -I$(ROOMU_SYS)/PlotUtils \
		    -I./include -I../include \
		    -inlineInputHeader \
		    -s $(TARGETBASE).so \
		  -rml $(TARGETBASE)_rdict.pcm \
		  -rmf $(TARGETBASE).rootmap \
		  $(INCLUDES) $(INCLUDE) $^
# clean rootmap output up a bit ... (magic?)
# -e "s/\.dylib\.so/\.dylib/g"
#  ? 		     -e "s%^header *%header PlotUtils/%g" \
#   order matters here
	  sed -i.bak \
		     -e "s/_rdict.pcm/.so/g"  \
		     -e "s%$(MY_LIB_PATH)/%%g" \
	     $(TARGETBASE).rootmap
# total hack
	touch $(ROOTDICTBASE).h
endif


clean:
	-rm -f *.o
	-rm -f $(ROOTDICTCXX)
	-rm -f $(ROOTDICTH)
	-rm -f ../lib/$(TARGET)
